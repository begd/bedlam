head	1.1;
access;
symbols
	rel-0-3-dev:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2005.10.24.03.43.50;	author acolomba;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2005.10.24.03.43.50;	author acolomba;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2005.10.30.22.45.57;	author acolomba;	state dead;
branches;
next	;


desc
@@


1.1
log
@file HibernateContinuationStore.java was initially added on branch rel-0-3-dev.
@
text
@@


1.1.2.1
log
@removed ContinuationManager, extracted interface to ContinuationStore,
moved code to SessionContinuationStore
@
text
@a0 170
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is SISCweb.
 *
 * The Initial Developer of the Original Code is Alessandro Colomba.
 * Portions created by the Alessandro Colomba are Copyright (C) 2005
 * Alessandro Colomba. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

package siscweb.contcentric;

import org.hibernate.HibernateException;
import org.hibernate.Session;

import sisc.data.Procedure;
import siscweb.util.HibernateUtil;


public class HibernateContinuationStore implements ContinuationStore
{
    private static ContinuationStore instance;
    private static String lock = "lock";

    public static ContinuationStore getInstance()
    {
        synchronized(lock) {
            if(instance == null) {
                instance = new HibernateContinuationStore();
            }

            return instance;
        }
    }

    private HibernateContinuationStore()
    { }

    /* (non-Javadoc)
     * @@see siscweb.contcentric.ContinuationStore#storeContinuation(java.lang.String, java.lang.String, java.lang.String, sisc.data.Procedure, long)
     */
    public void store(final String sessionId,
                                  final String groupId,
                                  final String continuationId,
                                  final Procedure procedure,
                                  final long ttl)
    {
        try {
            HibernateUtil.beginTransaction();
            final Session session = HibernateUtil.getSession();

            ContinuationGroup continuationGroup = (ContinuationGroup)
                session.get(ContinuationGroup.class, groupId);


            if(continuationGroup != null) {
                continuationGroup.touch();
            }
            else {
                continuationGroup = new ContinuationGroup(groupId, new Long(ttl), sessionId);
                session.save(continuationGroup);
            }

            final Continuation continuation = new Continuation(continuationId, procedure);
            continuationGroup.addContinuation(continuation);
        }
        catch(final HibernateException e) {
            HibernateUtil.rollbackTransaction();
            throw new RuntimeException(e);
        }
    }

    /* (non-Javadoc)
     * @@see siscweb.contcentric.ContinuationStore#fetchContinuation(java.lang.String, java.lang.String)
     */
    public Procedure fetch(final String sessionId, final String continuationId)
    {
        try {
            HibernateUtil.beginTransaction();
            final Session session = HibernateUtil.getSession();

            final Continuation continuation = (Continuation) session
                .getNamedQuery("siscweb.contcentric.Continuation.fetch")
                .setParameter("continuationId", continuationId)
                .setParameter("sessionId", sessionId)
                .uniqueResult();

            if(continuation == null) {
                return null;
            }

            continuation.getGroup().touch();

            return continuation.getProcedure();
        }
        catch(final HibernateException e) {
            HibernateUtil.rollbackTransaction();
            throw new RuntimeException(e);
        }
    }

    /* (non-Javadoc)
     * @@see siscweb.contcentric.ContinuationStore#clearContinuations(java.lang.String)
     */
    public void clear(final String sessionId)
    {
        try {
            HibernateUtil.beginTransaction();
            final Session session = HibernateUtil.getSession();

            session.getNamedQuery("siscweb.contcentric.ContinuationGroup.clear")
                .setParameter("sessionId", sessionId)
                .executeUpdate();

            HibernateUtil.commitTransaction();
        }
        catch(final HibernateException e) {
            HibernateUtil.rollbackTransaction();
            throw new RuntimeException(e);
        }
    }

    /* (non-Javadoc)
     * @@see siscweb.contcentric.ContinuationStore#purgeExpiredContinuations()
     */
    public int purgeExpired()
    {
        try {
            HibernateUtil.beginTransaction();
            final Session session = HibernateUtil.getSession();

            final int n = session
                .getNamedQuery("siscweb.contcentric.ContinuationGroup.deleteExpired")
                .executeUpdate();

            HibernateUtil.commitTransaction();

            return n;
        }
        catch(final HibernateException e) {
            HibernateUtil.rollbackTransaction();
            throw new RuntimeException(e);
        }
    }
}
@


1.1.2.2
log
@moved from siscweb/ to siscweb/opt/hibernate/
@
text
@@


