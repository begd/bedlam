SchemeAppServlet has the following init parameters
* init-expr
* destroy-expr (optional)
SchemeAppServlet is responsible for initialising a scheme
application.

The heap for a Scheme application gets loaded from the url specified
in the sisc.heap system property. If no such property is specified an
attempt is made to locate a resource "sisc.shp". Hence one typically
supplies the heap by placing sisc.shp on the class path, e.g. in a jar
inside the WEB-INF/lib directory of a web app.

There should be exactly *one* SchemeAppServlet per web app and it
should normally be configured to be loaded on startup.

The servlet responds to a GET request by returning a form. It responds
to POST requests containing an "expressions" param by evaluating the
contents of the "expressions" post param in the scheme applications
top-level env and returning the resulting output. If, however, the
Content-Type of the POST is "application/x-scheme", then the servlet
will try to read the incoming data stream as an s-expression, evaluate
it within the scheme app and stream back the result.

init-expr is evaluated during servlet initialisation. The evaluation
must yield a function. This function then gets called with the servlet
object as a parameter. Ditto for destroy-expr, which gets evaluated
and the resulting function called when the servlet is destroyed.

The current directory which is active during the evaluation of
init-expr and destroy-expr is the servlet context root, which means
relative file names in load etc are resolved relative to it.

The SchemeAppServlet checks for servlet context init parameters called
"repl-port" and "repl-host". If the former is present the servlet
creates a thread listening for connections on that port. New
connections spawn a thread with a Read-Eval-Print-Loop running in the
servlet's Scheme application, i.e. connecting to the port via, say,
telnet will present you with a SISC prompt just as if you were running
SISC from the command line except that all expressions are evaluated
within the context of the servlet's Scheme application.

Specifying repl-host forces the the listening port to be bound to a
specific IP address.


SchemeServlet has the following init parameters:
* init-expr
* destroy-expr (optional)

init-expr and destroy-expr behave as described above.

The servlet object has public slots deleteFn, getFn, putFn, postFn,
which are intially all set to null, indicating that the default
HttpServlet methods should be called. If a slot is non-null, it is
assumed to be a Scheme function that takes two arguments. The function
is invoked with the HttpServletRequest and HttpServletResponse
objects. The return value is ignored.
