head	1.3;
access;
symbols
	rel-0-6-dev:1.3.0.10
	rel-0-5-fix:1.3.0.8
	rel-0-5:1.3
	rel-0-5-dev-safe-frames:1.3.0.6
	Root_rel-0-5-dev-safe-frames:1.3
	rel-0-4-fix-0:1.3
	rel-0-5-dev:1.3.0.4
	rel-0-4-fix:1.3.0.2
	rel-0-3-fix-3:1.2.2.2
	rel-0-3-fix-2:1.2.2.1
	rel-0-4-dev-sisc-1-11:1.2.4.2
	rel-0-3-fix-1:1.2
	rel-0-4-dev:1.2.0.4
	rel-0-3-fix:1.2.0.2
	rel-0-3:1.2
	rel-0-3-dev-1:1.1.2.1
	rel-0-2-fix-2:1.1.4.2
	rel-0-2-fix-1:1.1.4.2
	rel-0-2-fix:1.1.0.4
	rel-0-3-dev:1.1.0.2;
locks; strict;
comment	@# @;


1.3
date	2006.09.03.01.42.24;	author acolomba;	state Exp;
branches;
next	1.2;

1.2
date	2005.11.25.20.43.32;	author acolomba;	state Exp;
branches
	1.2.2.1
	1.2.4.1;
next	1.1;

1.1
date	2005.07.10.02.59.00;	author acolomba;	state dead;
branches
	1.1.2.1
	1.1.4.1;
next	;

1.1.2.1
date	2005.07.10.02.59.00;	author acolomba;	state Exp;
branches;
next	;

1.1.4.1
date	2005.07.10.02.59.00;	author acolomba;	state dead;
branches;
next	1.1.4.2;

1.1.4.2
date	2005.07.10.20.04.00;	author acolomba;	state Exp;
branches;
next	;

1.2.2.1
date	2006.02.25.17.12.05;	author acolomba;	state Exp;
branches;
next	1.2.2.2;

1.2.2.2
date	2006.04.15.15.55.28;	author acolomba;	state Exp;
branches;
next	;

1.2.4.1
date	2006.01.16.00.22.15;	author acolomba;	state Exp;
branches;
next	1.2.4.2;

1.2.4.2
date	2006.02.11.20.21.43;	author acolomba;	state Exp;
branches;
next	1.2.4.3;

1.2.4.3
date	2006.04.08.21.40.41;	author acolomba;	state Exp;
branches;
next	;


desc
@@


1.3
log
@merged from rel-0-4-dev
@
text
@;;; The contents of this file are subject to the Mozilla Public License Version
;;; 1.1 (the "License"); you may not use this file except in compliance with
;;; the License. You may obtain a copy of the License at
;;; http://www.mozilla.org/MPL/
;;;
;;; Software distributed under the License is distributed on an "AS IS" basis,
;;; WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;; for the specific language governing rights and limitations under the
;;; License.
;;;
;;; The Original Code is SISCweb.
;;;
;;; The Initial Developer of the Original Code is Alessandro Colomba.
;;; Portions created by the Initial Developer are Copyright (C) 2005-2006
;;; Alessandro Colomba. All Rights Reserved.
;;;
;;; Contributor(s):
;;;
;;; Alternatively, the contents of this file may be used under the terms of
;;; either the GNU General Public License Version 2 or later (the "GPL"), or
;;; the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
;;; in which case the provisions of the GPL or the LGPL are applicable instead
;;; of those above. If you wish to allow use of your version of this file only
;;; under the terms of either the GPL or the LGPL, and not to allow others to
;;; use your version of this file under the terms of the MPL, indicate your
;;; decision by deleting the provisions above and replace them with the notice
;;; and other provisions required by the GPL or the LGPL. If you do not delete
;;; the provisions above, a recipient may use your version of this file under
;;; the terms of any one of the MPL, the GPL or the LGPL.

(require-library 'siscweb/bindings)
(require-library 'siscweb/xhtml)
(require-library 'sxml/dotml)

(module examples/graphpad
  (graphpad)

  (import string-io)
  (import siscweb/bindings)
  (import siscweb/xhtml)
  (import sxml/dotml)


  (define sps-graph-string
    (string-append
     "(graph (@@ (id \"G\"))\n"
     "  (node (@@ (id \"c\") (label \"scissors\") (href \"http://www.google.com/search?q=scissors\")))\n"
     "  (node (@@ (id \"p\") (label \"paper\") (href \"http://www.google.com/search?q=paper\")))\n"
     "  (node (@@ (id \"s\") (label \"stone\") (href \"http://www.google.com/search?q=stone\")))\n"
     "  (edge (@@ (from \"c\") (to \"p\") (label \"cut\")))\n"
     "  (edge (@@ (from \"p\") (to \"s\") (label \"wraps\")))\n"
     "  (edge (@@ (from \"s\") (to \"c\") (label \"breaks\")))))"))


  (define (graphpad req)
    (let loop ((layout "dot")
               (format "gif")
               (graph-string sps-graph-string))
      (let-bindings ((layout "layout")
                     (format "format")
                     (graph-string "graph"))
          (send-main-page layout format graph-string)
        (loop layout format graph-string))))


  ;; (layout format graph) => bindings
  (define (send-main-page layout format graph-string)
    (get-bindings
     (send-xhtml/suspend
      (lambda (k-url)
        `(*TOP*
          (*PI* xml "version=\"1.0\"")
          (*DTD-INFO/PUBLIC* "html"
                             "-//W3C//DTD XHTML 1.0 Strict//EN"
                             "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd")
          (html (@@ (xmlns "http://www.w3.org/1999/xhtml")
                   (xml:lang "en") (lang "en"))
           (head
            (title "Graphpad")
            (link (@@ (href-c "/css/default.css")
                     (rel "stylesheet")
                     (type "text/css"))))
           (body
            (h3 "Graphpad")
            ,(make-embedded-graph layout format graph-string)
            (form (@@ (action-e ,k-url) (method "post"))
             (div (@@ (style "text-align: center;"))
              (textarea (@@ (id "graph") (name "graph") (cols "80") (rows "12"))
               ,graph-string)
              (br)
              (input (@@ (type "submit") (value "Update")))
              "Layout:"
              (select (@@ (id "layout") (name "layout"))
               ,@@(map (lambda (l)
                        `(option (@@ (value ,l)
                                    (selected ,(if (equal? l layout) "yes" #f)))
                                 ,l))
                      '("dot" "neato" "twopi" "circo" "fdp")))
              "Format:"
              (select (@@ (id "format") (name "format"))
               ,@@(map (lambda (f)
                        `(option (@@ (value ,f)
                                    (selected ,(if (equal? f format) "yes" #f)))
                                 ,f))
                      '("gif" "jpg" "png")))
              (a (@@ (href-p ,(lambda (req)
                               (set! req #f)
                               (send-graph-source graph-string)))
                    (target "graph-source"))
               "view graph source..."))
             (p (@@ (style "font-style: italic;"))
              "Note: If you are unable to see a graph image, you will need to install "
              (a (@@ (href "http://www.graphviz.org")) "Graphviz")
              ", and place the executables in the system path."))
            (p (a (@@ (href-c "/")) "^ Home")))))))))


  (define (make-embedded-graph layout format graph-string)
    `(div (@@ (style "text-align: center;"))
      (object (@@ (type "graphviz") (layout ,layout) (format ,format)
                 (style "text-align: center;"))
              ,(with-input-from-string graph-string read))))


  (define (send-graph-source graph-string)
    (send-xhtml/back
     `(*TOP*
       (*DTD-INFO/PUBLIC* "html"
                          "-//W3C//DTD XHTML 1.0 Strict//EN"
                          "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd")
       (html (@@ (xmlns "http://www.w3.org/1999/xhtml")
                (xml:lang "en") (lang "en"))
        (head
         (title "Graph Source")
         (link (@@ (href-c "/css/default.css")
                  (rel "stylesheet")
                  (type "text/css"))))
        (body
         ,(with/fc
           (lambda (m e)
             `(p "Invalid DotML"))
           (lambda ()
             `(p ,(dotml->dot (with-input-from-string graph-string read))))))))))

  )
@


1.2
log
@merged from rel-0-3-dev
@
text
@d14 1
a14 1
;;; Portions created by the Initial Developer are Copyright (C) 2005
d32 1
a32 1
(require-library 'siscweb/html)
d40 1
a40 1
  (import siscweb/html)
d69 1
a69 1
     (send-html/suspend
d71 41
a111 36
        `(html
          (head
           (title "Graphpad")
           (link (@@ (href-c "/css/default.css")
                    (rel "stylesheet")
                    (type "text/css"))))
          (body
           (h3 "Graphpad")
           ,(make-embedded-graph layout format graph-string)
           (form (@@ (action-e ,k-url) (method "post"))
            (div (@@ (align "center"))
             (textarea (@@ (name "graph") (cols 80) (rows 12))
              ,graph-string)
             (br)
             (input (@@ (type "submit") (value "Update")))
             "Layout:"
             (select (@@ (name "layout"))
              ,@@(map (lambda (l)
                       `(option (@@ (value ,l)
                                   (selected ,(if (equal? l layout) "yes" #f)))
                                ,l))
                     '("dot" "neato" "twopi" "circo" "fdp")))
             "Format:"
             (select (@@ (name "format"))
              ,@@(map (lambda (f)
                       `(option (@@ (value ,f)
                                   (selected ,(if (equal? f format) "yes" #f)))
                                ,f))
                     '("gif" "jpg" "png")))
             (a (@@ (href-p ,(lambda (req)
                              (set! req #f)
                              (send-graph-source graph-string)))
                   (target "graph-source"))
                "view graph source..."))
            (p
             (i
d119 4
a122 4
    `(table (@@ (align "center"))
      (tr
       (td (object (@@ (type "graphviz") (layout ,layout) (format ,format))
                   ,(with-input-from-string graph-string read))))))
d126 18
a143 13
    (send-html/back
     `(html
       (head
        (title "Graph Source")
        (link (@@ (href-c "/css/default.css")
                 (rel "stylesheet")
                 (type "text/css"))))
       (body
        ,(with/fc
          (lambda (m e)
            `(p "Invalid DotML"))
          (lambda ()
            `(p ,(dotml->dot (with-input-from-string graph-string read)))))))))
@


1.2.2.1
log
@merged from rel-0-4-dev-sisc-1-11
@
text
@d32 1
a32 1
(require-library 'siscweb/xhtml)
d40 1
a40 1
  (import siscweb/xhtml)
d69 1
a69 1
     (send-xhtml/suspend
d71 36
a106 40
        `(*TOP*
          (*DTD-INFO/PUBLIC* "html"
                             "-//W3C//DTD XHTML 1.0 Strict//EN"
                             "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd")
          (html (@@ (xmlns "http://www.w3.org/1999/xhtml")
                   (xml:lang "en") (lang "en"))
           (head
            (title "Graphpad")
            (link (@@ (href-c "/css/default.css")
                     (rel "stylesheet")
                     (type "text/css"))))
           (body
            (h3 "Graphpad")
            ,(make-embedded-graph layout format graph-string)
            (form (@@ (action-e ,k-url) (method "post"))
             (div (@@ (style "text-align: center;"))
              (textarea (@@ (id "graph") (name "graph") (cols "80") (rows "12"))
               ,graph-string)
              (br)
              (input (@@ (type "submit") (value "Update")))
              "Layout:"
              (select (@@ (id "layout") (name "layout"))
               ,@@(map (lambda (l)
                        `(option (@@ (value ,l)
                                    (selected ,(if (equal? l layout) "yes" #f)))
                                 ,l))
                      '("dot" "neato" "twopi" "circo" "fdp")))
              "Format:"
              (select (@@ (id "format") (name "format"))
               ,@@(map (lambda (f)
                        `(option (@@ (value ,f)
                                    (selected ,(if (equal? f format) "yes" #f)))
                                 ,f))
                      '("gif" "jpg" "png")))
              (a (@@ (href-p ,(lambda (req)
                               (set! req #f)
                               (send-graph-source graph-string)))
                    (target "graph-source"))
               "view graph source..."))
             (p (@@ (style "font-style: italic;"))
d114 4
a117 4
    `(div (@@ (style "text-align: center;"))
      (object (@@ (type "graphviz") (layout ,layout) (format ,format)
                 (style "text-align: center;"))
              ,(with-input-from-string graph-string read))))
d121 13
a133 18
    (send-xhtml/back
     `(*TOP*
       (*DTD-INFO/PUBLIC* "html"
                          "-//W3C//DTD XHTML 1.0 Strict//EN"
                          "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd")
       (html (@@ (xmlns "http://www.w3.org/1999/xhtml")
                (xml:lang "en") (lang "en"))
        (head
         (title "Graph Source")
         (link (@@ (href-c "/css/default.css")
                  (rel "stylesheet")
                  (type "text/css"))))
        (body
         ,(with/fc
           (lambda (m e)
             `(p "Invalid DotML"))
           (lambda ()
             `(p ,(dotml->dot (with-input-from-string graph-string read))))))))))
@


1.2.2.2
log
@merged from rel-0-4-dev
@
text
@d14 1
a14 1
;;; Portions created by the Initial Developer are Copyright (C) 2005-2006
a71 1
          (*PI* xml "version=\"1.0\"")
@


1.2.4.1
log
@added DOCTYPE declarations
@
text
@d71 40
a110 43
        `(*TOP*
          (*DTD-INFO/PUBLIC* |HTML| "-//W3C//DTD HTML 4.01 Transitional//EN"
                              "http://www.w3.org/TR/html4/loose.dtd")
          (html
           (head
            (title "Graphpad")
            (link (@@ (href-c "/css/default.css")
                     (rel "stylesheet")
                     (type "text/css"))))
           (body
            (h3 "Graphpad")
            ,(make-embedded-graph layout format graph-string)
            (form (@@ (action-e ,k-url) (method "post"))
             (div (@@ (align "center"))
              (textarea (@@ (name "graph") (cols 80) (rows 12))
               ,graph-string)
              (br)
              (input (@@ (type "submit") (value "Update")))
              "Layout:"
              (select (@@ (name "layout"))
               ,@@(map (lambda (l)
                        `(option (@@ (value ,l)
                                    (selected ,(if (equal? l layout) "yes" #f)))
                                 ,l))
                      '("dot" "neato" "twopi" "circo" "fdp")))
              "Format:"
              (select (@@ (name "format"))
               ,@@(map (lambda (f)
                        `(option (@@ (value ,f)
                                    (selected ,(if (equal? f format) "yes" #f)))
                                 ,f))
                      '("gif" "jpg" "png")))
              (a (@@ (href-p ,(lambda (req)
                               (set! req #f)
                               (send-graph-source graph-string)))
                    (target "graph-source"))
               "view graph source..."))
             (p
              (i
               "Note: If you are unable to see a graph image, you will need to install "
               (a (@@ (href "http://www.graphviz.org")) "Graphviz")
               ", and place the executables in the system path."))
             (p (a (@@ (href-c "/")) "^ Home"))))))))))
@


1.2.4.2
log
@now outputs compliant xhtml
@
text
@d32 1
a32 1
(require-library 'siscweb/xhtml)
d40 1
a40 1
  (import siscweb/xhtml)
d69 1
a69 1
     (send-xhtml/suspend
d72 3
a74 5
          (*DTD-INFO/PUBLIC* "html"
                             "-//W3C//DTD XHTML 1.0 Strict//EN"
                             "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd")
          (html (@@ (xmlns "http://www.w3.org/1999/xhtml")
                   (xml:lang "en") (lang "en"))
d84 2
a85 2
             (div (@@ (style "text-align: center;"))
              (textarea (@@ (id "graph") (name "graph") (cols "80") (rows "12"))
d90 1
a90 1
              (select (@@ (id "layout") (name "layout"))
d97 1
a97 1
              (select (@@ (id "format") (name "format"))
d108 6
a113 5
             (p (@@ (style "font-style: italic;"))
              "Note: If you are unable to see a graph image, you will need to install "
              (a (@@ (href "http://www.graphviz.org")) "Graphviz")
              ", and place the executables in the system path."))
            (p (a (@@ (href-c "/")) "^ Home")))))))))
d117 4
a120 4
    `(div (@@ (style "text-align: center;"))
      (object (@@ (type "graphviz") (layout ,layout) (format ,format)
                 (style "text-align: center;"))
              ,(with-input-from-string graph-string read))))
d124 13
a136 18
    (send-xhtml/back
     `(*TOP*
       (*DTD-INFO/PUBLIC* "html"
                          "-//W3C//DTD XHTML 1.0 Strict//EN"
                          "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd")
       (html (@@ (xmlns "http://www.w3.org/1999/xhtml")
                (xml:lang "en") (lang "en"))
        (head
         (title "Graph Source")
         (link (@@ (href-c "/css/default.css")
                  (rel "stylesheet")
                  (type "text/css"))))
        (body
         ,(with/fc
           (lambda (m e)
             `(p "Invalid DotML"))
           (lambda ()
             `(p ,(dotml->dot (with-input-from-string graph-string read))))))))))
@


1.2.4.3
log
@explicitely outputs <?xml pi in pages
@
text
@d14 1
a14 1
;;; Portions created by the Initial Developer are Copyright (C) 2005-2006
a71 1
          (*PI* xml "version=\"1.0\"")
@


1.1
log
@file graphpad.scm was initially added on branch rel-0-3-dev.
@
text
@d1 135
@


1.1.4.1
log
@file graphpad.scm was added on branch rel-0-2-fix on 2005-07-10 20:04:00 +0000
@
text
@@


1.1.4.2
log
@merged from rel-0-3-dev
@
text
@a0 135
;;; The contents of this file are subject to the Mozilla Public License Version
;;; 1.1 (the "License"); you may not use this file except in compliance with
;;; the License. You may obtain a copy of the License at
;;; http://www.mozilla.org/MPL/
;;;
;;; Software distributed under the License is distributed on an "AS IS" basis,
;;; WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;; for the specific language governing rights and limitations under the
;;; License.
;;;
;;; The Original Code is SISCweb.
;;;
;;; The Initial Developer of the Original Code is Alessandro Colomba.
;;; Portions created by the Initial Developer are Copyright (C) 2005
;;; Alessandro Colomba. All Rights Reserved.
;;;
;;; Contributor(s):
;;;
;;; Alternatively, the contents of this file may be used under the terms of
;;; either the GNU General Public License Version 2 or later (the "GPL"), or
;;; the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
;;; in which case the provisions of the GPL or the LGPL are applicable instead
;;; of those above. If you wish to allow use of your version of this file only
;;; under the terms of either the GPL or the LGPL, and not to allow others to
;;; use your version of this file under the terms of the MPL, indicate your
;;; decision by deleting the provisions above and replace them with the notice
;;; and other provisions required by the GPL or the LGPL. If you do not delete
;;; the provisions above, a recipient may use your version of this file under
;;; the terms of any one of the MPL, the GPL or the LGPL.

(require-library 'siscweb/bindings)
(require-library 'siscweb/html)
(require-library 'sxml/dotml)

(module examples/graphpad
  (graphpad)

  (import string-io)
  (import siscweb/bindings)
  (import siscweb/html)
  (import sxml/dotml)


  (define sps-graph-string
    (string-append
     "(graph (@@ (id \"G\"))\n"
     "  (node (@@ (id \"c\") (label \"scissors\") (href \"http://www.google.com/search?q=scissors\")))\n"
     "  (node (@@ (id \"p\") (label \"paper\") (href \"http://www.google.com/search?q=paper\")))\n"
     "  (node (@@ (id \"s\") (label \"stone\") (href \"http://www.google.com/search?q=stone\")))\n"
     "  (edge (@@ (from \"c\") (to \"p\") (label \"cut\")))\n"
     "  (edge (@@ (from \"p\") (to \"s\") (label \"wraps\")))\n"
     "  (edge (@@ (from \"s\") (to \"c\") (label \"breaks\")))))"))


  (define (graphpad req)
    (let loop ((layout "dot")
               (format "gif")
               (graph-string sps-graph-string))
      (let-bindings ((layout "layout")
                     (format "format")
                     (graph-string "graph"))
          (send-main-page layout format graph-string)
        (loop layout format graph-string))))


  ;; (layout format graph) => bindings
  (define (send-main-page layout format graph-string)
    (get-bindings
     (send-html/suspend
      (lambda (k-url)
        `(html
          (head
           (title "Graphpad")
           (link (@@ (href-c "/css/default.css")
                    (rel "stylesheet")
                    (type "text/css"))))
          (body
           (h3 "Graphpad")
           ,(make-embedded-graph layout format graph-string)
           (form (@@ (action-e ,k-url) (method "post"))
            (div (@@ (align "center"))
             (textarea (@@ (name "graph") (cols 80) (rows 12))
              ,graph-string)
             (br)
             (input (@@ (type "submit") (value "Update")))
             "Layout:"
             (select (@@ (name "layout"))
              ,@@(map (lambda (l)
                       `(option (@@ (value ,l)
                                   (selected ,(if (equal? l layout) "yes" #f)))
                                ,l))
                     '("dot" "neato" "twopi" "circo" "fdp")))
             "Format:"
             (select (@@ (name "format"))
              ,@@(map (lambda (f)
                       `(option (@@ (value ,f)
                                   (selected ,(if (equal? f format) "yes" #f)))
                                ,f))
                     '("gif" "jpg" "png")))
             (a (@@ (href-p ,(lambda (req)
                              (set! req #f)
                              (send-graph-source graph-string)))
                   (target "graph-source"))
                "view graph source..."))
            (p
             (i
              "Note: If you are unable to see a graph image, you will need to install "
              (a (@@ (href "http://www.graphviz.org")) "Graphviz")
              ", and place the executables in the system path."))
            (p (a (@@ (href-c "/")) "^ Home")))))))))


  (define (make-embedded-graph layout format graph-string)
    `(table (@@ (align "center"))
      (tr
       (td (object (@@ (type "graphviz") (layout ,layout) (format ,format))
                   ,(with-input-from-string graph-string read))))))


  (define (send-graph-source graph-string)
    (send-html/back
     `(html
       (head
        (title "Graph Source")
        (link (@@ (href-c "/css/default.css")
                 (rel "stylesheet")
                 (type "text/css"))))
       (body
        ,(with/fc
          (lambda (m e)
            `(p "Invalid DotML"))
          (lambda ()
            `(p ,(dotml->dot (with-input-from-string graph-string read)))))))))

  )
@


1.1.2.1
log
@initial import
@
text
@a0 135
;;; The contents of this file are subject to the Mozilla Public License Version
;;; 1.1 (the "License"); you may not use this file except in compliance with
;;; the License. You may obtain a copy of the License at
;;; http://www.mozilla.org/MPL/
;;;
;;; Software distributed under the License is distributed on an "AS IS" basis,
;;; WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;; for the specific language governing rights and limitations under the
;;; License.
;;;
;;; The Original Code is SISCweb.
;;;
;;; The Initial Developer of the Original Code is Alessandro Colomba.
;;; Portions created by the Initial Developer are Copyright (C) 2005
;;; Alessandro Colomba. All Rights Reserved.
;;;
;;; Contributor(s):
;;;
;;; Alternatively, the contents of this file may be used under the terms of
;;; either the GNU General Public License Version 2 or later (the "GPL"), or
;;; the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
;;; in which case the provisions of the GPL or the LGPL are applicable instead
;;; of those above. If you wish to allow use of your version of this file only
;;; under the terms of either the GPL or the LGPL, and not to allow others to
;;; use your version of this file under the terms of the MPL, indicate your
;;; decision by deleting the provisions above and replace them with the notice
;;; and other provisions required by the GPL or the LGPL. If you do not delete
;;; the provisions above, a recipient may use your version of this file under
;;; the terms of any one of the MPL, the GPL or the LGPL.

(require-library 'siscweb/bindings)
(require-library 'siscweb/html)
(require-library 'sxml/dotml)

(module examples/graphpad
  (graphpad)

  (import string-io)
  (import siscweb/bindings)
  (import siscweb/html)
  (import sxml/dotml)


  (define sps-graph-string
    (string-append
     "(graph (@@ (id \"G\"))\n"
     "  (node (@@ (id \"c\") (label \"scissors\") (href \"http://www.google.com/search?q=scissors\")))\n"
     "  (node (@@ (id \"p\") (label \"paper\") (href \"http://www.google.com/search?q=paper\")))\n"
     "  (node (@@ (id \"s\") (label \"stone\") (href \"http://www.google.com/search?q=stone\")))\n"
     "  (edge (@@ (from \"c\") (to \"p\") (label \"cut\")))\n"
     "  (edge (@@ (from \"p\") (to \"s\") (label \"wraps\")))\n"
     "  (edge (@@ (from \"s\") (to \"c\") (label \"breaks\")))))"))


  (define (graphpad req)
    (let loop ((layout "dot")
               (format "gif")
               (graph-string sps-graph-string))
      (let-bindings ((layout "layout")
                     (format "format")
                     (graph-string "graph"))
          (send-main-page layout format graph-string)
        (loop layout format graph-string))))


  ;; (layout format graph) => bindings
  (define (send-main-page layout format graph-string)
    (get-bindings
     (send-html/suspend
      (lambda (k-url)
        `(html
          (head
           (title "Graphpad")
           (link (@@ (href-c "/css/default.css")
                    (rel "stylesheet")
                    (type "text/css"))))
          (body
           (h3 "Graphpad")
           ,(make-embedded-graph layout format graph-string)
           (form (@@ (action-e ,k-url) (method "post"))
            (div (@@ (align "center"))
             (textarea (@@ (name "graph") (cols 80) (rows 12))
              ,graph-string)
             (br)
             (input (@@ (type "submit") (value "Update")))
             "Layout:"
             (select (@@ (name "layout"))
              ,@@(map (lambda (l)
                       `(option (@@ (value ,l)
                                   (selected ,(if (equal? l layout) "yes" #f)))
                                ,l))
                     '("dot" "neato" "twopi" "circo" "fdp")))
             "Format:"
             (select (@@ (name "format"))
              ,@@(map (lambda (f)
                       `(option (@@ (value ,f)
                                   (selected ,(if (equal? f format) "yes" #f)))
                                ,f))
                     '("gif" "jpg" "png")))
             (a (@@ (href-p ,(lambda (req)
                              (set! req #f)
                              (send-graph-source graph-string)))
                   (target "graph-source"))
                "view graph source..."))
            (p
             (i
              "Note: If you are unable to see a graph image, you will need to install "
              (a (@@ (href "http://www.graphviz.org")) "Graphviz")
              ", and place the executables in the system path."))
            (p (a (@@ (href-c "/")) "^ Home")))))))))


  (define (make-embedded-graph layout format graph-string)
    `(table (@@ (align "center"))
      (tr
       (td (object (@@ (type "graphviz") (layout ,layout) (format ,format))
                   ,(with-input-from-string graph-string read))))))


  (define (send-graph-source graph-string)
    (send-html/back
     `(html
       (head
        (title "Graph Source")
        (link (@@ (href-c "/css/default.css")
                 (rel "stylesheet")
                 (type "text/css"))))
       (body
        ,(with/fc
          (lambda (m e)
            `(p "Invalid DotML"))
          (lambda ()
            `(p ,(dotml->dot (with-input-from-string graph-string read)))))))))

  )
@

