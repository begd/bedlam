head	1.1;
access;
symbols
	rel-0-3-dev-1:1.1.2.6
	rel-0-2-fix-2:1.1.4.2
	rel-0-2-fix-1:1.1.4.2
	rel-0-2-fix:1.1.0.4
	rel-0-3-dev:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2005.07.04.21.50.27;	author acolomba;	state dead;
branches
	1.1.2.1
	1.1.4.1;
next	;

1.1.2.1
date	2005.07.04.21.50.27;	author acolomba;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2005.07.04.21.59.24;	author acolomba;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	2005.07.05.04.12.03;	author acolomba;	state Exp;
branches;
next	1.1.2.4;

1.1.2.4
date	2005.07.05.05.42.18;	author acolomba;	state Exp;
branches;
next	1.1.2.5;

1.1.2.5
date	2005.07.09.17.02.36;	author acolomba;	state Exp;
branches;
next	1.1.2.6;

1.1.2.6
date	2005.07.10.02.51.51;	author acolomba;	state Exp;
branches;
next	1.1.2.7;

1.1.2.7
date	2005.11.20.18.44.01;	author acolomba;	state dead;
branches;
next	;

1.1.4.1
date	2005.07.04.21.50.27;	author acolomba;	state dead;
branches;
next	1.1.4.2;

1.1.4.2
date	2005.07.10.20.04.00;	author acolomba;	state Exp;
branches;
next	;


desc
@@


1.1
log
@file dotml.scm was initially added on branch rel-0-3-dev.
@
text
@@


1.1.4.1
log
@file dotml.scm was added on branch rel-0-2-fix on 2005-07-10 20:04:00 +0000
@
text
@@


1.1.4.2
log
@merged from rel-0-3-dev
@
text
@a0 147
;;; The contents of this file are subject to the Mozilla Public License Version
;;; 1.1 (the "License"); you may not use this file except in compliance with
;;; the License. You may obtain a copy of the License at
;;; http://www.mozilla.org/MPL/
;;;
;;; Software distributed under the License is distributed on an "AS IS" basis,
;;; WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;; for the specific language governing rights and limitations under the
;;; License.
;;;
;;; The Original Code is SISCweb.
;;;
;;; The Initial Developer of the Original Code is Alessandro Colomba.
;;; Portions created by the Initial Developer are Copyright (C) 2005
;;; Alessandro Colomba. All Rights Reserved.
;;;
;;; Contributor(s):
;;;
;;; Alternatively, the contents of this file may be used under the terms of
;;; either the GNU General Public License Version 2 or later (the "GPL"), or
;;; the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
;;; in which case the provisions of the GPL or the LGPL are applicable instead
;;; of those above. If you wish to allow use of your version of this file only
;;; under the terms of either the GPL or the LGPL, and not to allow others to
;;; use your version of this file under the terms of the MPL, indicate your
;;; decision by deleting the provisions above and replace them with the notice
;;; and other provisions required by the GPL or the LGPL. If you do not delete
;;; the provisions above, a recipient may use your version of this file under
;;; the terms of any one of the MPL, the GPL or the LGPL.

;;; This code is a derivative of the DOTML stylesheet developed by
;;; Martin Loetzsch (http://www.martin-loetzsch.de/DOTML).


(require-library 'sxml/sxml-match)
(require-library 'util/misc)


(module sxml/dotml
  (dotml->dot)

  (import string-io)
  (import type-system)

  (import srfi-1)

  (import sxml-matcher)
  (import util/misc)


  (define graph-attributes '(bgcolor fontcolor fontname fontsize label margin nodesep rankdir ranksep ratio size))
  (define cluster-attributes '(bgcolor color fillcolor fontcolor fontname fontsize label labeljust labelloc style))
  (define node-attributes '(color fillcolor fixedsize fontcolor fontname fontsize height href shape style URL width))
  (define record-attributes '(color fillcolor fontcolor fontname fontsize height href style URL width))
  (define edge-attributes '(arrowhead arrowsize arrowtail constraint color decorate dir fontcolor fontname fontsize headlabel headport href label labeldistance labelfloat labelfontcolor labelfontname labelfontsize minlen samehead sametail style taillabel tailport URL))


  (define (dotml->dot dotml)
    (sxml-match dotml
     ;; TODO: check attribute file-name?
     ((graph (@@ (id ,id) . ,attrs) ,[x] ...)
      (string-append "digraph "
                     id
                     " {compound=\"true\";"
                     (alist->attrs attrs ";")
                     x ...
                     "} "))
     ((sub-graph (@@ (id ,id) (rank ,rank) . ,attrs) ,[x] ...)
      (string-append "subgraph sub_graph_"
                     id
                     " {"
                     (alist->attrs attrs ";")
                     x ...
                     "} "))
     ((cluster (@@ (id ,id) . ,attrs) ,[x] ...)
      (string-append "subgraph cluster_"
                     id
                     " {"
                     (alist->attrs attrs ";")
                     x ...
                     "} "))

     ((node (@@ (id ,id) . ,attrs))
      (string-append id
                     "["
                     (alist->attrs attrs ", ")
                     "];"))

     ((edge (@@ (from ,src) (to ,dst) . ,attrs))
      (string-append "edge["
                     (alist->attrs attrs ", ")
                     "] "
                     src
                     " -> "
                     dst
                     ";"))

     ((record (@@ (id ,id) . ,attrs) ,x ...)
      (string-append id
                     "[shape=\"record\", "
                     (alist->attrs attrs ", ")
                     "label=\""
                     (make-record-label (cons 'record (list x ...)))
                     "\"];"))

     (,any (error
            (string-append
             "dotml->dot: Could not recognize element : \""
             (with-output-to-string (lambda () (pretty-print any)))
             "\"")))))

  (define (alist->attrs alist separator)
    (fold-right
     (lambda (pair str)
       (string-append
        (symbol->string (car pair))
        "=\""
        (value->string (cadr pair))
        "\""
        separator
        str))
     " "
     alist))

  (define (value->string value)
    (typecase value
      ((<number>) (number->string value))
      ((<symbol>) (symbol->string value))
      ((<string>) value)
      (else (with-output-to-string (lambda () (pretty-print value))))))

  (define (make-record-label record-elt)
    (sxml-match record-elt
      ((record ,[x] ...)
       (string-append
        "{ "
        (fold-right (lambda (a b)
                      (if b
                          (string-append a " | " b)
                          a))
                    #f (list x ...))
        " } "))
      ((node (@@ (label ,label)))
       label)
      ((node (@@ (id ,id)))
       id)))
  )
@


1.1.2.1
log
@initial import
@
text
@a0 139
;;; The contents of this file are subject to the Mozilla Public License Version
;;; 1.1 (the "License"); you may not use this file except in compliance with
;;; the License. You may obtain a copy of the License at
;;; http://www.mozilla.org/MPL/
;;;
;;; Software distributed under the License is distributed on an "AS IS" basis,
;;; WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;; for the specific language governing rights and limitations under the
;;; License.
;;;
;;; The Original Code is SISCweb.
;;;
;;; The Initial Developer of the Original Code is Alessandro Colomba.
;;; Portions created by the Initial Developer are Copyright (C) 2005
;;; Alessandro Colomba. All Rights Reserved.
;;;
;;; Contributor(s):
;;;
;;; Alternatively, the contents of this file may be used under the terms of
;;; either the GNU General Public License Version 2 or later (the "GPL"), or
;;; the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
;;; in which case the provisions of the GPL or the LGPL are applicable instead
;;; of those above. If you wish to allow use of your version of this file only
;;; under the terms of either the GPL or the LGPL, and not to allow others to
;;; use your version of this file under the terms of the MPL, indicate your
;;; decision by deleting the provisions above and replace them with the notice
;;; and other provisions required by the GPL or the LGPL. If you do not delete
;;; the provisions above, a recipient may use your version of this file under
;;; the terms of any one of the MPL, the GPL or the LGPL.

;;; This code is a derivative of the DOTML stylesheet developed by
;;; Martin Loetzsch (http://www.martin-loetzsch.de/DOTML).


(require-library 'sxml/sxml-match)
(require-library 'util/misc)


(module sxml/dotml
  (dotml->dot)

  (import string-io)
  (import type-system)

  (import srfi-1)

  (import sxml-matcher)
  (import util/misc)


  (define graph-attributes '(bgcolor fontcolor fontname fontsize label margin nodesep rankdir ranksep ratio size))
  (define cluster-attributes '(bgcolor color fillcolor fontcolor fontname fontsize label labeljust labelloc style))
  (define node-attributes '(color fillcolor fixedsize fontcolor fontname fontsize height shape style URL width))
  (define record-attributes '(color fillcolor fontcolor fontname fontsize height style URL width))
  (define edge-attributes '(arrowhead arrowsize arrowtail constraint color decorate dir fontcolor fontname fontsize headlabel headport label labeldistance labelfloat labelfontcolor labelfontname labelfontsize minlen samehead sametail style taillabel tailport URL))


  (define (dotml->dot dotml)
    (sxml-match dotml
     ;; TODO: check attribute file-name?
     ((graph (@@ (id ,id) . ,attrs) ,[x] ...)
      (string-append "digraph "
                     (symbol->string id)
                     " {compound=\"true\";"
                     (alist->attrs attrs ";")
                     x ...
                     "} "))
     ((sub-graph (@@ (id ,id) (rank ,rank) . ,attrs) ,[x] ...)
      (guard (and (symbol? id)
                  (memq rank '(same min max source sink))))
      (string-append "subgraph sub_graph_"
                     (symbol->string id)
                     " {"
                     (alist->attrs attrs ";")
                     x ...
                     "} "))
     ((cluster (@@ (id ,id) . ,attrs) ,[x] ...)
      (guard (symbol? id))
      (string-append "subgraph cluster_"
                     (symbol->string id)
                     " {"
                     (alist->attrs attrs ";")
                     x ...
                     "} "))

     ((node (@@ (id ,id) (label ,label) . ,attrs))
      (guard (and (symbol? id)
                  (string? label)))
      (string-append "node[label=\""
                     label
                     "\", "
                     (alist->attrs attrs ", ")
                     "] {"
                     (symbol->string id)
                     "};"))

     ((node (@@ (id ,id) . ,attrs))
      (guard (symbol? id))
      (string-append "node[label=\""
                     (symbol->string id)
                     "\", "
                     (alist->attrs attrs ", ")
                     "] {"
                     (symbol->string id)
                     "};"))

     ((edge (@@ (from ,src) (to ,dst) . ,attrs))
      (guard (and (symbol? src)
                  (symbol? dst)))
      (string-append "edge["
                     (alist->attrs attrs ", ")
                     "] " ;TODO: some struct stuff missing
                     (symbol->string src)
                     " -> "
                     (symbol->string dst)
                     ";"))
     (,any (with-output-to-string (lambda () (pretty-print any))))))

  (define (alist->attrs alist separator)
    (fold-right
     (lambda (pair str)
       (string-append
        (symbol->string (car pair))
        "=\""
        (value->string (cadr pair))
        "\""
        separator
        str))
     " "
     alist))

  (define (value->string value)
    (typecase value
      ((<number>) (number->string value))
      ((<symbol>) (symbol->string value))
      ((<string>) value)
      (else (with-output-to-string (lambda () (pretty-print value))))))

  )@


1.1.2.2
log
@changed serialization of node element; the old one seemed to have
problems with the URL attribute
@
text
@d86 11
d99 3
a101 2
      (string-append (symbol->string id)
                     "["
d103 3
a105 1
                     "];"))
@


1.1.2.3
log
@added support for graphviz record nodes
@
text
@d98 1
a98 1
                     "] "
a102 9

     ((record (@@ (id ,id) . ,attrs) ,x ...)
      (string-append (symbol->string id)
                     "[shape=\"record\", "
                     (alist->attrs attrs ", ")
                     "label=\""
                     (make-record-label (cons 'record (list x ...)))
                     "\"];"))

d125 1
a125 21
  (define (make-record-label record-elt)
    (sxml-match record-elt
      ((record ,[x] ...)
       (string-append
        "{ "
        (fold-right (lambda (a b)
                      (if b
                          (string-append a " | " b)
                          a))
                    #f (list x ...))
        " } "))
      ((node (@@ (label ,label)))
       (guard (string? label))
       label)
      ((node (@@ (id ,id)))
       (guard (symbol? id))
       (symbol->string id))))

  )


@


1.1.2.4
log
@added href to attribute lists
@
text
@d53 3
a55 3
  (define node-attributes '(color fillcolor fixedsize fontcolor fontname fontsize height href shape style URL width))
  (define record-attributes '(color fillcolor fontcolor fontname fontsize height href style URL width))
  (define edge-attributes '(arrowhead arrowsize arrowtail constraint color decorate dir fontcolor fontname fontsize headlabel headport href label labeldistance labelfloat labelfontcolor labelfontname labelfontsize minlen samehead sametail style taillabel tailport URL))
@


1.1.2.5
log
@sub-graph rank needs not be a symbol anymore; now errors out in case
of bad dotml
@
text
@d69 2
a70 1
      (guard (symbol? id))
d112 1
a112 5
     (,any (error
            (string-append
             "dotml->dot: Could not recognize element : \""
             (with-output-to-string (lambda () (pretty-print any)))
             "\"")))))
d153 2
@


1.1.2.6
log
@id attributes are now strings, not symbols
@
text
@d63 1
a63 1
                     id
d69 1
d71 1
a71 1
                     id
d77 1
d79 1
a79 1
                     id
d86 2
a87 1
      (string-append id
d93 2
d98 1
a98 1
                     src
d100 1
a100 1
                     dst
d104 1
a104 1
      (string-append id
d149 1
d152 3
a154 1
       id)))
@


1.1.2.7
log
@moved from siscweb root to opt/sxml
@
text
@@


